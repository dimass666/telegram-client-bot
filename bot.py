@bot.message_handler(func=lambda m: is_authorized(m) and user_states.get(m.chat.id) == "ask_games")
def handle_ask_games(message):
    cid = message.chat.id
    choice = message.text.strip().lower()
    if "–Ω–µ –∫—É–ø–ª–µ–Ω—ã" in choice:
        user_states[cid] = "ask_attachment"
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç"))
        bot.send_message(cid, "–ï—Å—Ç—å –ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã?", reply_markup=markup)
    elif "–∫—É–ø–ª–µ–Ω—ã" in choice:
        user_states[cid] = "games"
        bot.send_message(cid, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä (–∫–∞–∂–¥–∞—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):")
    else:
        bot.send_message(cid, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏: –ò–≥—Ä—ã –Ω–µ –∫—É–ø–ª–µ–Ω—ã / –ò–≥—Ä—ã –∫—É–ø–ª–µ–Ω—ã.")
        @bot.message_handler(func=lambda m: is_authorized(m) and user_states.get(m.chat.id) == "ask_attachment")
def handle_attachment_question(message):
    cid = message.chat.id
    answer = message.text.strip().lower()
    if answer == "–¥–∞":
        user_states[cid] = "awaiting_attachment"
        bot.send_message(cid, "–ü—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–¥–∞–º–∏:")
    elif answer == "–Ω–µ—Ç":
        save_client_block(client_data[cid])
        bot.send_message(cid, f"‚úÖ –ö–ª–∏–µ–Ω—Ç {client_data[cid][0]} –¥–æ–±–∞–≤–ª–µ–Ω.")
        reset_user_state(cid)
    else:
        bot.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.")

@bot.message_handler(content_types=['document', 'photo'])
def handle_attachments(message):
    cid = message.chat.id
    if user_states.get(cid) == "awaiting_attachment":
        client_id = client_data[cid][0]
        folder = f"attachments/{client_id}"
        os.makedirs(folder, exist_ok=True)
        file_id = message.document.file_id if message.document else message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        filename = file_info.file_path.split("/")[-1]
        filepath = os.path.join(folder, filename)
        with open(filepath, 'wb') as f:
            f.write(downloaded_file)
        save_client_block(client_data[cid])
        bot.send_message(cid, f"‚úÖ –ö–ª–∏–µ–Ω—Ç {client_id} –¥–æ–±–∞–≤–ª–µ–Ω —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º.")
        reset_user_state(cid)
        def send_client_data_with_attachment(chat_id, phone):
    data = get_client_block(phone)
    bot.send_message(chat_id, data)
    attach_path = f"attachments/{phone}"
    if os.path.isdir(attach_path):
        files = os.listdir(attach_path)
        for f in files:
            full_path = os.path.join(attach_path, f)
            if f.lower().endswith((".jpg", ".jpeg", ".png")):
                with open(full_path, "rb") as img:
                    bot.send_photo(chat_id, img, caption="–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã")
            else:
                with open(full_path, "rb") as doc:
                    bot.send_document(chat_id, doc, caption="–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã")

@bot.message_handler(func=lambda m: is_authorized(m) and m.text == "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
def edit_client_start(message):
    user_states[message.chat.id] = "edit_request"
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –Ω–∏–∫ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")

@bot.message_handler(func=lambda m: is_authorized(m) and user_states.get(m.chat.id) == "edit_request")
def handle_edit_request(message):
    query = message.text.strip()
    if not get_client_block(query):
        bot.send_message(message.chat.id, "–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        reset_user_state(message.chat.id)
        return
    user_states[message.chat.id] = f"edit_menu_{query}"
    send_client_data_with_attachment(message.chat.id, query)
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üì± –¢–µ–ª–µ—Ñ–æ–Ω", "üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "üîê –ê–∫–∫–∞—É–Ω—Ç")
    markup.add("üïπ –ü–æ–¥–ø–∏—Å–∫—É", "üéÆ –ò–≥—Ä—ã", "üóÇ –í–ª–æ–∂–µ–Ω–∏—è")
    markup.add("üóë –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞", "‚ùå –û—Ç–º–µ–Ω–∞")
    bot.send_message(message.chat.id, "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=markup)

@bot.message_handler(func=lambda m: is_authorized(m) and m.text == "üóÇ –í–ª–æ–∂–µ–Ω–∏—è")
def handle_attachment_edit(message):
    phone = user_states.get(message.chat.id, "").replace("edit_menu_", "")
    if not phone:
        return bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞.")
    folder = f"attachments/{phone}"
    if os.path.isdir(folder) and os.listdir(folder):
        bot.send_message(message.chat.id, "–§–∞–π–ª –Ω–∞–π–¥–µ–Ω. –ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å?")
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("–£–¥–∞–ª–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ", "–ó–∞–º–µ–Ω–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        user_states[message.chat.id] = f"edit_attach_{phone}"
    else:
        bot.send_message(message.chat.id, "–í–ª–æ–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")

@bot.message_handler(func=lambda m: is_authorized(m) and user_states.get(m.chat.id, "").startswith("edit_attach_"))
def handle_attachment_choice(message):
    cid = message.chat.id
    phone = user_states[cid].replace("edit_attach_", "")
    folder = f"attachments/{phone}"
    if message.text.lower().startswith("—É–¥–∞–ª–∏—Ç—å"):
        for f in os.listdir(folder):
            os.remove(os.path.join(folder, f))
        bot.send_message(cid, "–í–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
    elif message.text.lower().startswith("–∑–∞–º–µ–Ω–∏—Ç—å"):
        for f in os.listdir(folder):
            os.remove(os.path.join(folder, f))
        user_states[cid] = "awaiting_attachment"
        client_data[cid] = [phone]
        bot.send_message(cid, "–ü—Ä–∏—à–ª–∏ –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è:")
    else:
        bot.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ '–£–¥–∞–ª–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ' –∏–ª–∏ '–ó–∞–º–µ–Ω–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ'.")