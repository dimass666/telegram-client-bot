import telebot
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from database import *
import datetime
import threading
import time
import os
import sqlite3

API_TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
ALLOWED_USER_ID = 350902460

bot = telebot.TeleBot(API_TOKEN)
user_states = {}
client_data = {}

def is_authorized(message):
    return message.from_user.id == ALLOWED_USER_ID

def reset_user_state(user_id):
    user_states.pop(user_id, None)
    client_data.pop(user_id, None)

@bot.message_handler(commands=['start'])
def start(message):
    if not is_authorized(message):
        return bot.reply_to(message, "–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
    bot.send_message(message.chat.id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.")
    show_menu(message)

@bot.message_handler(commands=['menu'])
def show_menu(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚ûï –î–æ–±–∞–≤–∏—Ç—å", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
    markup.add("üîç –ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞", "üóë –£–¥–∞–ª–∏—Ç—å")
    markup.add("üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤", "üìä –ö–æ–ª-–≤–æ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º")
    markup.add("‚¨áÔ∏è –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É", "üß® –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –±–∞–∑—É")
    markup.add("üöÄ –°—Ç–∞—Ä—Ç")
    bot.send_message(message.chat.id, "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)

@bot.message_handler(func=lambda m: is_authorized(m) and m.text == "üöÄ –°—Ç–∞—Ä—Ç")
def start_button(message):
    start(message)

# –ó–¥–µ—Å—å –¥–∞–ª—å—à–µ –∏–¥—É—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞, –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ —Ç.–¥.
# –ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫—Ä–∞—Ç–∫–æ—Å—Ç—å, –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ª–æ–≥–∏–∫–∏

def notify_loop():
    while True:
        now = datetime.datetime.now()
        if now.hour == 9:
            for phone, typ, months, end, bday in get_upcoming_notifications():
                if end:
                    msg = f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:\n–£ –∫–ª–∏–µ–Ω—Ç–∞ {phone} –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ {typ} ({months}–º) –∑–∞–≤—Ç—Ä–∞ ({end})"
                    markup = InlineKeyboardMarkup()
                    markup.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞", callback_data=f"open_client_{phone}"))
                    bot.send_message(ALLOWED_USER_ID, msg, reply_markup=markup)
                if bday:
                    bot.send_message(ALLOWED_USER_ID, f"–£ –∫–ª–∏–µ–Ω—Ç–∞ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:\n{phone}")
                    data = get_client_block(phone)
                    if data:
                        bot.send_message(ALLOWED_USER_ID, data)
        time.sleep(3600)

init_db()
threading.Thread(target=notify_loop, daemon=True).start()
bot.infinity_polling()
